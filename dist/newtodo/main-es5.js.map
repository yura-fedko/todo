{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/login/login.component.html","./src/app/task/task.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/data.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/login/login.service.ts","./src/app/task/task.component.css","./src/app/task/task.component.ts","./src/app/task/task.guard.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\\\">\\n    <a class=\\\"navbar-brand col-sm-3 col-md-2 mr-0 text-white\\\">To do</a>\\n    <ul class=\\\"navbar-nav px-3\\\">\\n        <li class=\\\"nav-item text-nowrap\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"\\\" *ngIf=\\\"state.logOut\\\" (click)=\\\"logOut()\\\">Log out</a>\\n        </li>\\n    </ul>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"<div class=\\\"d-flex justify-content-center\\\" style=\\\"margin-top: 100px\\\">\\n    <div class=\\\"card col-3\\\" [ngSwitch]=\\\"formState\\\">\\n        <div class=\\\"card-body\\\" [ngSwitch]=\\\"formState\\\">\\n            <form [formGroup]=\\\"form\\\">\\n                <div class=\\\"justify-content-centr\\\">\\n                    <h1 class=\\\"h3 mb-3 font-weight-normal d-flex justify-content-center\\\" *ngSwitchCase=\\\"1\\\">Please sign in</h1>\\n                    <h1 class=\\\"h3 mb-3 font-weight-normal d-flex justify-content-center\\\" *ngSwitchCase=\\\"2\\\">Please sign up</h1>\\n                </div>\\n                <div class=\\\"form-group \\\">\\n                    <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" formControlName=\\\"email\\\">\\n                    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"form.get('email').invalid\\\">\\n                        Incorrect email!\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"exampleInputPassword1\\\">Password</label>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n                    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"form.get('password').invalid\\\">\\n                        The length of the password should be 8-15 squirrels\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\" *ngSwitchCase=\\\"2\\\">\\n                    <label for=\\\"exampleInputPassword1\\\">Confirm Password</label>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\">\\n                    <div class=\\\"alert alert-danger mt-1\\\" role=\\\"alert\\\" *ngIf=\\\"form.get('confirmPassword').invalid\\\">\\n                        The length of the password should be 8-15 squirrels\\n                    </div>\\n                </div>\\n                <div class=\\\"alert alert-danger mt-1\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    {{error}}\\n                </div>\\n                <div class=\\\"row justify-content-md-around\\\">\\n                    <button class=\\\"btn btn-primary\\\" *ngSwitchCase=\\\"1\\\" (click)=\\\"logIn()\\\">log in</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" *ngSwitchCase=\\\"1\\\" (click)=\\\"formState=2; error = ''\\\">Sign up</button>\\n                </div>\\n                <div class=\\\"row justify-content-md-around\\\">\\n                    <button class=\\\"btn btn-primary \\\" *ngSwitchCase=\\\"2\\\" (click)=\\\"regUser()\\\">Sign up</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" *ngSwitchCase=\\\"2\\\" (click)=\\\"formState=1; error = ''\\\">Log In</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div>\\n    <div class=\\\"list-group container center-block mb-2 w-50\\\">\\n        <h1 class=\\\"d-flex justify-content-center\\\">Tasks list</h1>\\n        <div class=\\\"list-group-item list-group-item-action flex-column align-items-start \\\">\\n            <div class=\\\"d-flex w-100 justify-content-between\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control mr-3\\\" placeholder=\\\"Enter task\\\" [(ngModel)]=\\\"addTaskTitle\\\" #input (blur)=\\\"input.value=''\\\">\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                    <button class=\\\"btn btn-secondary\\\" (click)=\\\"addTask()\\\">Add</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"list-group  container center-block mb-2 w-50\\\" *ngFor=\\\"let task of tasks\\\">\\n        <a class=\\\"list-group-item  flex-column align-items-start \\\">\\n            <div class=\\\"d-flex w-100 justify-content-between mb-2\\\">\\n                <h5 class=\\\"mb-1 align-self-center \\\">{{task.title}}</h5>\\n                <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-secondary\\\" (click)=\\\"delTask(task)\\\"><div class=\\\"material-icons align-bottom\\\" >delete_forever</div></button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editBtn(task)\\\"><i class=\\\"material-icons align-bottom\\\" >edit</i></button>\\n                </div>\\n            </div>\\n            <div class=\\\"d-flex justify-content-between border noEdit\\\" [class.edit]=\\\"task !== editTask\\\">\\n                <div class=\\\"m-3\\\">\\n                    <h6 class=\\\"mb-3\\\">Owner: {{task.owner.email}}</h6>\\n                    <h6 *ngIf=\\\"task.co_owner != ''\\\">Co-owners:</h6>\\n                    <div *ngFor=\\\"let co_owner of task.co_owner\\\" class=\\\"d-flex align-items-start flex-column\\\">\\n                        <div>{{co_owner.email}}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"m-3\\\">\\n                    <label>Edit task</label>\\n                    <div class=\\\"d-flex w-100 justify-content-between mb-3\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control mr-1\\\" #edit value={{task.title}}>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editTaskFn(task, edit.value)\\\"><i class=\\\"material-icons align-bottom\\\" >save</i></button>\\n                    </div>\\n                    <label>Share task</label>\\n                    <div class=\\\"d-flex w-100 justify-content-between\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control mr-1\\\" placeholder=\\\"Enter email\\\" #coOwner (blur)=\\\"input.value=''\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addCoOwner(task, coOwner.value)\\\"><i class=\\\"material-icons align-bottom\\\">share</i></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </a>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskComponent } from './task/task.component';\nimport { LoginComponent } from './login/login.component';\nimport { TaskGuard } from './task/task.guard';\nimport { from } from 'rxjs';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent},\n  { path: 'task', component: TaskComponent, canActivate: [TaskGuard]},\n  {path: '**', redirectTo: '', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [TaskGuard]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport {webSocket} from 'rxjs/webSocket';\nimport { from } from 'rxjs';\nimport { IsLoggetIn, State} from './data';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isLoggetIn = IsLoggetIn;\n  state = State;\n  socket: any;\n\n  logOut() {\n    this.isLoggetIn.status = false;\n    Cookie.delete('id');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { TaskComponent } from './task/task.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const IsLoggetIn = {\r\n  status: false,\r\n  id: false\r\n};\r\n\r\nexport const State = {\r\n  formState: 1,\r\n  logOut: false\r\n};\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms';\nimport { invalid } from '@angular/compiler/src/render3/view/util';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { Router } from '@angular/router';\nimport { State, IsLoggetIn} from '../data';\nimport { LoginService } from './login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formState = State.formState;\n  users: any;\n  email: FormControl;\n  password: FormControl;\n  confirmPassword: FormControl;\n  form: FormGroup;\n  isLoggetIn = IsLoggetIn;\n  error: string;\n  constructor(private service: LoginService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = new FormGroup ({\n      email: new FormControl ('', [Validators.email]),\n      password: new FormControl ('', [Validators.minLength(8), Validators.maxLength(16)]),\n      confirmPassword: new FormControl ('', [Validators.minLength(8), Validators.maxLength(16)])\n    });\n  }\n\n  regUser() {\n    this.error = '';\n    if (this.form.get('email').value !== '' || this.form.get('password').value !== '' || this.form.get('confirmPassword').value !== '') {\n      if (this.form.get('password').value === this.form.get('confirmPassword').value) {\n      const body = {\n        email: this.form.get('email').value,\n        password: this.form.get('password').value\n      };\n      this.service.regUser(body)\n      .subscribe (\n        res => {\n          if (res === true) {\n            this.formState = 1;\n          } else {\n            this.error = res;\n          }\n        });\n      } else {\n        this.error = 'Passwords do not match!';\n      }\n    }\n  }\n\n  logIn() {\n    this.error = '';\n    const body = {\n      email: this.form.get('email').value,\n      password: this.form.get('password').value\n    };\n    this.service.logIn(body)\n      .subscribe\n        ((res) => {\n          Cookie.set('id', res.id);\n          if (res.ok) {\n            this.router.navigate(['task']);\n            this.isLoggetIn.status = true;\n          } else {\n            this.error = res.error;\n          }\n            });\n          }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  apiLogin = '/api/login';\n  apiReg = '/api/register';\n  constructor(private http: HttpClient) { }\n\n  logIn(body) {\n    return this.http.post<any>(this.apiLogin, body);\n  }\n\n  regUser(body) {\n    return this.http.post<any>(this.apiReg, body);\n  }\n}\n","module.exports = \".edit {\\r\\n    display: none !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay90YXNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC90YXNrL3Rhc2suY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lZGl0IHtcclxuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IsLoggetIn, State } from '../data';\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { from } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport * as io from 'socket.io-client';\nimport { webSocket } from 'rxjs/webSocket';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\n\nexport class TaskComponent implements OnInit {\n  message: string;\n  socket: any;\n  tasks: any;\n  isLoggetIn = IsLoggetIn;\n  addTaskTitle: string;\n  state = State;\n  editTask;\n  shareInput: string;\n\n  constructor(private router: Router) {\n    this.state.logOut = true;\n    this.socket = io.connect('');\n\n    this.socket.on('initialTask', (res) => {\n      console.log(res)\n      this.tasks = res.filter(filterByOwner);\n\n      function filterByOwner(task) {\n        if (task.owner._id === Cookie.get('id') || filterByCoOwner(task.co_owner)) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      function filterByCoOwner(owners) {\n        if (owners.length !== 0) {\n          for (let i = 0; i <= owners.length; i++) {\n            if (owners[i]._id === Cookie.get('id')) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        }\n      }\n\n    });\n\n  }\n\n  addTask() {\n    if (this.addTaskTitle !== undefined) {\n      this.socket.emit('addTask', {\n        title: this.addTaskTitle,\n        owner: Cookie.get('id')\n      });\n    }\n  }\n\n  delTask(task) {\n    this.socket.emit('delTask', task);\n  }\n\n  editTaskFn(task, title) {\n    if (title !== '') {\n      this.socket.emit('editTask', { id: task._id, title: title });\n    }\n  }\n\n  addCoOwner(task, email) {\n    if (email !== '') {\n      this.socket.emit('addCoOwner', { id: task._id, email: email });\n    }\n  }\n\n  editBtn(task) {\n    if (this.editTask === task) {\n      this.editTask = '';\n    } else {\n      this.editTask = task;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable, from} from 'rxjs';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { Router } from '@angular/router';\r\nimport { State } from '../data';\r\n\r\nexport class TaskGuard implements CanActivate {\r\n  state = State;\r\n  constructor(private router: Router) {\r\n\r\n  }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n      if (Cookie.get('id') === 'null' || Cookie.get('id') === null) {\r\n        this.router.navigate(['']);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n\r\n\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}